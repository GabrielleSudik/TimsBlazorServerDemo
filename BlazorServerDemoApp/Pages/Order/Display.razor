@page "/Order/Display/{Id:int}"
@page "/Order/Display"

@inject IFoodData foodData
@inject IOrderData orderData

<h3>Display</h3>

@if (order is null)
{
    <h4>A brief message while we wait for an async method to load the order...</h4>
    <h5>In real life you'd use a spinning wheel or something.</h5>
}
else
{
    <table class="table">
        <tbody>
            <tr>
                <td><strong>Order Name</strong></td>
                <td>@order.OrderName</td>
            </tr>
            <tr>
                <td><strong>Order Date</strong></td>
                <td>@order.OrderDate</td>
            </tr>
            <tr>
                <td><strong>Order Total</strong></td>
                <td>@string.Format("{0:C}", order.Total)</td>
            </tr>
            <tr>
                <td><strong>Item Ordered</strong></td>
                <td>@itemPurchased</td>
            </tr>
            <tr>
                <td><strong>Quantity</strong></td>
                <td>@order.Quantity</td>
            </tr>
        </tbody>
    </table>
}

@code {

    [Parameter]
    public int Id { get; set; }

    private OrderModel order;
    private string itemPurchased;

    //the logic of this method is the same as the logic in our other projects
    //but instead of other code that calls the method
    //OnInitializedAsync() will run when the URL is called.

    protected override async Task OnInitializedAsync()
    {
        order = await orderData.GetOrderById(Id);

        if (order != null)
        {
            var food = await foodData.GetFood();

            itemPurchased = food.Where(x => x.Id == order.FoodId).FirstOrDefault()?.Title;
        }
    }
}

<!--Some notes. This is going to be for GETs.
    The code will know what id to get because it's passed
    in via the at-page {} info. And then,
    in the at-code section, it's identified as a property.
    Note the [Parameter] attribute, which lets the code
    know it's coming from the URL as a param.-->
<!--The second at-page above is how you make the ID param optional.-->
